{"version":3,"sources":["images/logo.svg","route/PrivateRoute.js","api/api.js","redux/actions/authActions.js","components/Header.js","styles/AllStyles.js","components/Landing.js","components/Footer.js","pages/LandingPage.js","pages/ErrorPage.js","components/LoginForm.js","pages/auth/LoginPage.js","redux/actions/allUsersActions.js","components/ListUsers.js","pages/users/ListUserPage.js","App.js","redux/slices/allUsersSlices.js","redux/slices/authSlice.js","redux/store.js","reportWebVitals.js","index.js"],"names":["module","exports","PrivateRoute","_ref","component","Component","rest","isAuthenticated","localStorage","getItem","React","createElement","Route","Object","assign","render","props","Redirect","to","axiosInstance","axios","create","baseURL","headers","login","createAsyncThunk","async","credentials","rejectWithValue","response","post","status","token","payload","data","setItem","JSON","stringify","Cookies","set","expires","path","message","error","_error$response","_error$response$data","logout","_","_ref2","get","Error","removeItem","remove","_error$response2","_error$response2$data","Header","history","useHistory","location","useLocation","dispatch","useDispatch","user","parse","Navbar","style","backgroundColor","color","Container","pathname","Brand","onClick","handleGoBack","goBack","cursor","Button","variant","href","Image","src","Logo","alt","height","className","Toggle","aria-controls","Collapse","id","Text","unwrap","push","console","jumbotronStyle","padding","textAlign","marginBottom","sectionStyle","buttonStyle","border","transition","linkStyle","textDecoration","errorPageStyle","display","alignItems","justifyContent","fontFamily","errorContentStyle","maxWidth","borderRadius","boxShadow","errorCodeStyle","fontSize","margin","errorMessageStyle","marginTop","errorDescriptionStyle","errorLinkStyle","Landing","Row","Col","size","Link","Footer","md","Date","getFullYear","LandingPage","flexDirection","minHeight","flex","ErrorPage","onMouseEnter","e","target","onMouseLeave","LoginForm","username","setUsername","useState","password","setPassword","loading","useSelector","state","auth","alert","setAlert","xs","Card","Body","Title","Alert","Form","onSubmit","preventDefault","Group","controlId","Label","Control","type","placeholder","value","onChange","required","disabled","LoginPage","getAllUsers","content","createUser","userData","editUser","_ref3","_ref4","_error$response3","_error$response3$data","ListUsers","users","allUsers","searchTerm","setSearchTerm","showModal","setShowModal","editMode","setEditMode","selectedUser","setSelectedUser","usrFirstname","usrLastname","usrUsername","usrId","show","useEffect","handleCloseModal","filteredUsers","filter","toLowerCase","includes","handleCreateUser","onClose","dismissible","Table","striped","bordered","hover","map","item","index","key","usrStatus","usrCdate","filteredUser","fromEntries","entries","handleEditUser","Modal","onHide","closeButton","ListUserPage","App","Router","Switch","exact","createSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","fulfilled","action","rejected","newUser","updatedUser","authSlice","store","configureStore","reducer","authReducer","allUsersReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode","Provider"],"mappings":"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","file":"static/js/main.2c2e05e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.529e4487.svg\";","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isAuthenticated = localStorage.getItem(\"user\"); // Check if user is authenticated\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'https://kcb-boma-yangu-backend-kcb-boma-yangu.apps.dev.aro.kcbgroup.com/api/users';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Authorization': 'Basic Qm9tYVBvcnRhbENsaWVudDpjYmZiZDBhYi0yODc2LTQ0MmItYTNjOC04YWVkOTYzMmJhODM=',\r\n        'Cookie': 'fbcddb7c82b2370dbc9f2956b19e7c33=f2001438c8f7916be557203a22cc5dc0',\r\n        'Content-Type': 'application/json'\r\n    }\r\n    // Add any other default config options here, such as headers or interceptors\r\n});\r\n\r\nexport default axiosInstance;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axiosInstance from '../../api/api';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Define the async thunk action for login\r\nexport const login = createAsyncThunk(\"/auth/login\", async (credentials, { rejectWithValue }) => {\r\n    try {\r\n        const response = await axiosInstance.post('/login', credentials);\r\n\r\n        // Check if response is successful\r\n        if (response.status === 200) {\r\n            const { token, payload } = response.data;\r\n\r\n            // Save the payload to local storage\r\n            localStorage.setItem('user', JSON.stringify(payload));\r\n\r\n            // Save the token in a cookie\r\n            Cookies.set('token', token, { expires: 1, path: '/' }); // Cookie expires in 1 day\r\n\r\n            return response.data; // Return the entire response data\r\n        } else {\r\n            return rejectWithValue(response.data.message);\r\n        }\r\n    } catch (error) {\r\n        const message = error.response?.data?.message || \"An error occurred\";\r\n        return rejectWithValue(message);\r\n    }\r\n});\r\n\r\n\r\n// Define the async thunk action for logout\r\nexport const logout = createAsyncThunk(\"/auth/logout\", async (_, { rejectWithValue }) => {\r\n    try {\r\n        // Retrieve the token from cookies\r\n        const token = Cookies.get('token');\r\n\r\n        // If there is no token, return early\r\n        if (!token) {\r\n            throw new Error('No token found');\r\n        }\r\n\r\n        // Make the POST request to the logout endpoint with token in the headers\r\n        const response = await axiosInstance.post('/logout', {}, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        // Check if response is successful\r\n        if (response.status === 200) {\r\n            // Clear local storage and remove token from cookies\r\n            localStorage.removeItem('user');\r\n            Cookies.remove('token');\r\n\r\n            return response.data; // Return the entire response data\r\n        } else {\r\n            return rejectWithValue(response.data.message);\r\n        }\r\n    } catch (error) {\r\n        const message = error.response?.data?.message || \"An error occurred\";\r\n        return rejectWithValue(message);\r\n    }\r\n});\r\n","import React from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Container, Navbar, Button, Image } from \"react-bootstrap\";\r\nimport Logo from \"../images/logo.svg\";\r\nimport Cookies from 'js-cookie';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../redux/actions/authActions'; // Adjust the path if necessary\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  // Check if user is logged in\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const token = Cookies.get('token');\r\n\r\n  // Define styles\r\n  const navbarStyle = {\r\n    backgroundColor: \"#003D4C\",\r\n    color: \"#fff\",\r\n  };\r\n\r\n  // Handle logout\r\n  const handleLogout = async () => {\r\n    try {\r\n      await dispatch(logout()).unwrap();\r\n      history.push('/login'); // Redirect to login page after logout\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  // Handle navigation\r\n  const handleGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Navbar style={navbarStyle}>\r\n      <Container>\r\n        {location.pathname !== \"/\" && (\r\n          <Navbar.Brand onClick={handleGoBack} style={{ cursor: \"pointer\" }}>\r\n            <Button variant=\"outline-light\">Back</Button>\r\n          </Navbar.Brand>\r\n        )}\r\n        <Navbar.Brand href=\"/\">\r\n          <Image\r\n            src={Logo}\r\n            alt=\"Logo\"\r\n            height=\"60\"\r\n            className=\"d-inline-block align-top\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\"></Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            {user || token ? (\r\n              <Button\r\n                style={{ color: \"#fff\" }}\r\n                variant=\"outline-light\"\r\n                onClick={handleLogout}\r\n              >\r\n                Sign Out\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                style={{ color: \"#fff\" }}\r\n                variant=\"outline-light\"\r\n                href=\"/login\"\r\n              >\r\n                Sign In\r\n              </Button>\r\n            )}\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/** Landing */\r\n\r\nexport const jumbotronStyle = {\r\n  color: \"#003D4C\",\r\n  padding: \"60px\",\r\n  textAlign: \"center\",\r\n  marginBottom: \"30px\",\r\n};\r\n\r\nexport const sectionStyle = {\r\n  backgroundColor: \"#F9F9F9\",\r\n  color: \"#003D4C\",\r\n  padding: \"60px\",\r\n  textAlign: \"center\",\r\n  marginBottom: \"30px\",\r\n};\r\n\r\nexport const buttonStyle = {\r\n  // backgroundColor: '#003D4C',\r\n  border: \"1px solid #003D4C\",\r\n  color: \"#A4C61C\",\r\n  transition: \"#003D4C 0.3s, color 0.3s\",\r\n};\r\n\r\nexport const linkStyle = {\r\n  color: \"#003D4C\",\r\n  textDecoration: \"none\",\r\n};\r\n\r\n\r\n/** ErrorPage */\r\n\r\nexport const errorPageStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f2f2f2',\r\n    color: '#333',\r\n    textAlign: 'center',\r\n    fontFamily: 'Arial, sans-serif',\r\n};\r\n\r\nexport const errorContentStyle = {\r\n    maxWidth: '600px',\r\n    padding: '20px',\r\n    backgroundColor: '#fff',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 0 15px rgba(0, 0, 0, 0.1)',\r\n};\r\n\r\nexport const errorCodeStyle = {\r\n    fontSize: '100px',\r\n    margin: '0',\r\n    color: '#003D4C',\r\n};\r\n\r\nexport const errorMessageStyle = {\r\n    fontSize: '24px',\r\n    marginTop: '10px',\r\n};\r\n\r\nexport const errorDescriptionStyle = {\r\n    fontSize: '16px',\r\n    marginTop: '20px',\r\n    color: '#666',\r\n};\r\n\r\nexport const errorLinkStyle = {\r\n    display: 'inline-block',\r\n    marginTop: '30px',\r\n    padding: '10px 20px',\r\n    backgroundColor: '#003D4C',\r\n    color: '#fff',\r\n    textDecoration: 'none',\r\n    borderRadius: '5px',\r\n    transition: 'background-color 0.3s',\r\n};\r\n\r\nexport const errorLinkHoverStyle = {\r\n    backgroundColor: '#d93b3b',\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport {\r\n  jumbotronStyle,\r\n  buttonStyle,\r\n  linkStyle,\r\n  sectionStyle,\r\n} from '../styles/AllStyles.js';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"jumbotron\" style={jumbotronStyle}>\r\n            <h1>Welcome to User Management System!</h1>\r\n            <p>Efficiently manage users with our comprehensive user management service.</p>\r\n            <p>\r\n              <Button style={buttonStyle} variant=\"outline-dark\" size=\"sm\" className=\"mt-3\">\r\n                <Link style={linkStyle} to=\"/login\">\r\n                  Get Started\r\n                </Link>\r\n              </Button>\r\n            </p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <section style={sectionStyle} id=\"about\">\r\n            <h2>About Our Service</h2>\r\n            <p>\r\n              Our user management system allows you to easily create, edit, and manage user accounts. \r\n              Whether you're an administrator overseeing multiple users or a manager delegating tasks, \r\n              our system provides all the tools you need to keep your user base organized and efficient.\r\n            </p>\r\n          </section>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    backgroundColor: \"#010100\",\r\n  };\r\n  return (\r\n    <footer style={footerStyle} className=\"mt-auto py-3 text-light\">\r\n      <Container>\r\n        <Row>\r\n          <Col md={6}>\r\n            <p>© {new Date().getFullYear()} KCB Bank</p>\r\n          </Col>\r\n          <Col md={6} className=\"text-md-right\">\r\n            <ul className=\"list-inline\">\r\n              <li className=\"list-inline-item\">\r\n                <a href=\"#home\" className=\"text-light\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"list-inline-item\">\r\n                <a href=\"#about\" className=\"text-light\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li className=\"list-inline-item\">\r\n                <a href=\"#contact\" className=\"text-light\">\r\n                  Contact\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Landing from '../components/Landing';\r\nimport Footer from '../components/Footer';\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\r\n      <Header />\r\n      <div style={{ flex: '1' }}>\r\n        <Landing />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  errorPageStyle,\r\n  errorContentStyle,\r\n  errorCodeStyle,\r\n  errorMessageStyle,\r\n  errorDescriptionStyle,\r\n  errorLinkStyle,\r\n} from '../styles/AllStyles.js';\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <div style={errorPageStyle}>\r\n      <div style={errorContentStyle}>\r\n        <h1 style={errorCodeStyle}>404</h1>\r\n        <h2 style={errorMessageStyle}>Page Not Found</h2>\r\n        <p style={errorDescriptionStyle}>\r\n          Sorry, the page you're looking for doesn't exist. \r\n          You might have mistyped the URL or the page may have moved.\r\n        </p>\r\n        <Link \r\n          to=\"/\" \r\n          style={errorLinkStyle}\r\n          onMouseEnter={(e) => e.target.style.backgroundColor = '#d93b3b'}\r\n          onMouseLeave={(e) => e.target.style.backgroundColor = '#ff4a4a'}\r\n        >\r\n          Go Back to Home\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Container, Row, Col, Card, Image, Alert, Button } from 'react-bootstrap';\r\nimport { login } from '../redux/actions/authActions'; // Adjust the path if necessary\r\nimport Logo from '../images/logo.svg';\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { loading } = useSelector((state) => state.auth); // Adjust based on your state structure\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Clear previous alert\r\n      setAlert(null);\r\n      await dispatch(login({ username, password })).unwrap();\r\n      // Redirect to dashboard or another page on successful login\r\n      history.push('/'); // Adjust the path as necessary\r\n    } catch (error) {\r\n      // Set alert with error message\r\n      setAlert(error.message || \"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center mt-5\">\r\n        <Col xs={12} md={6}>\r\n          <Card>\r\n            <Card.Header style={{ backgroundColor: '#003D4C' }}>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Image\r\n                  src={Logo}\r\n                  alt=\"Logo\"\r\n                  height=\"50\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </div>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column align-items-center\">\r\n              <Card.Title className=\"text-center\" style={{ color: '#003D4C' }}>\r\n                Sign In\r\n              </Card.Title>\r\n              \r\n              {alert && <Alert variant=\"danger\">{alert}</Alert>}\r\n              {loading && <Alert variant=\"info\">Logging in...</Alert>}\r\n              \r\n              <Form onSubmit={handleLogin}>\r\n                <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                  {loading ? 'Logging in...' : 'Login'}\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport LoginForm from '../../components/LoginForm'\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\r\n      <Header />\r\n      <div style={{ flex: '1' }}>\r\n        <LoginForm />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axiosInstance from '../../api/api';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const getAllUsers = createAsyncThunk('allUsers/getAllUsers', async (_, { rejectWithValue }) => {\r\n    try {\r\n        // Get the token from cookies\r\n        const token = Cookies.get('token');\r\n        \r\n        // Set up the request payload\r\n        const data = JSON.stringify({ token });\r\n\r\n        // Make the request with the token in the body\r\n        const response = await axiosInstance.post('/listAll', data);\r\n\r\n        if (response.status === 200) {\r\n            return response.data.payload.content; // Return the content array\r\n        } else {\r\n            return rejectWithValue(response.data.message);\r\n        }\r\n    } catch (error) {\r\n        const message = error.response?.data?.message || 'An error occurred';\r\n        return rejectWithValue(message);\r\n    }\r\n});\r\n\r\n\r\n// Define the async thunk\r\nexport const createUser = createAsyncThunk(\r\n    'users/createUser',\r\n    async (userData, { rejectWithValue }) => {\r\n      try {\r\n        // Get the token from cookies\r\n        const token = Cookies.get('token');\r\n  \r\n        // Make the request with token in the body\r\n        const response = await axiosInstance.post('/create', {\r\n          token: token,\r\n          payload: userData\r\n        });\r\n  \r\n        if (response.status === 200) {\r\n          return response.data.payload; // Return the payload object\r\n        } else {\r\n          return rejectWithValue(response.data.message);\r\n        }\r\n      } catch (error) {\r\n        const message = error.response?.data?.message || 'An error occurred';\r\n        return rejectWithValue(message);\r\n      }\r\n    }\r\n  );\r\n\r\n\r\n  // Define the editUser action\r\nexport const editUser = createAsyncThunk(\r\n    'users/editUser',\r\n    async ({ token, payload }, { rejectWithValue }) => {\r\n        try {\r\n            const response = await axiosInstance.post('/edit', { token, payload });\r\n\r\n            if (response.status === 200) {\r\n                return response.data.payload;\r\n            } else {\r\n                return rejectWithValue(response.data.message);\r\n            }\r\n        } catch (error) {\r\n            const message = error.response?.data?.message || 'An error occurred';\r\n            return rejectWithValue(message);\r\n        }\r\n    }\r\n);","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Form, Container, Button, Modal, Alert } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  getAllUsers,\r\n  createUser,\r\n  editUser,\r\n} from \"../redux/actions/allUsersActions\"; // Adjust path to your action file\r\n\r\nconst ListUsers = () => {\r\n  const dispatch = useDispatch();\r\n  const { users = [], loading, error } = useSelector((state) => state.allUsers); // Default to empty array\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({\r\n    usrFirstname: \"\",\r\n    usrLastname: \"\",\r\n    usrUsername: \"\",\r\n    usrId: \"\",\r\n  });\r\n  const [alert, setAlert] = useState({ show: false, message: \"\", type: \"\" });\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllUsers());\r\n  }, [dispatch]);\r\n\r\n  const handleCreateUser = () => {\r\n    setSelectedUser({\r\n      usrFirstname: \"\",\r\n      usrLastname: \"\",\r\n      usrUsername: \"\",\r\n      usrId: \"\",\r\n    });\r\n    setEditMode(false);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleEditUser = (user) => {\r\n    const filteredUser = Object.fromEntries(\r\n      Object.entries(user).filter(([key, value]) => value !== null)\r\n    );\r\n    setSelectedUser(filteredUser);\r\n    setEditMode(true);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    setAlert({ show: false, message: \"\", type: \"\" }); // Clear alert when closing the modal\r\n  };\r\n\r\n  const handleSaveUser = async () => {\r\n    try {\r\n      if (editMode) {\r\n        await dispatch(\r\n          editUser({ token: Cookies.get(\"token\"), payload: selectedUser })\r\n        );\r\n        setAlert({\r\n          show: true,\r\n          message: \"User updated successfully!\",\r\n          type: \"success\",\r\n        });\r\n      } else {\r\n        await dispatch(createUser(selectedUser));\r\n        setAlert({\r\n          show: true,\r\n          message: \"User created successfully!\",\r\n          type: \"success\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setAlert({\r\n        show: true,\r\n        message: error.message || \"An error occurred\",\r\n        type: \"danger\",\r\n      });\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  const filteredUsers = users.filter(\r\n    (user) =>\r\n      user.usrFirstname.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      user.usrLastname.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      user.usrUsername.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <Container>\r\n      <Form.Group className=\"mt-3 mb-3\" controlId=\"search\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Button className=\"mb-3\" onClick={handleCreateUser}>\r\n        Create User\r\n      </Button>\r\n\r\n      {/* Alert Component */}\r\n      {alert.show && (\r\n        <Alert\r\n          variant={alert.type}\r\n          onClose={() => setAlert({ show: false, message: \"\", type: \"\" })}\r\n          dismissible\r\n        >\r\n          {alert.message}\r\n        </Alert>\r\n      )}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n            <th>Status</th>\r\n            <th>Created Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredUsers.map((item, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{item.usrFirstname}</td>\r\n              <td>{item.usrLastname}</td>\r\n              <td>{item.usrUsername}</td>\r\n              <td>{item.usrStatus}</td>\r\n              <td>{item.usrCdate}</td>\r\n              <td>\r\n                <Button variant=\"primary\" onClick={() => handleEditUser(item)}>\r\n                  Edit\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <Modal show={showModal} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{editMode ? \"Edit User\" : \"Create User\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formFirstname\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter first name\"\r\n                value={selectedUser.usrFirstname}\r\n                onChange={(e) =>\r\n                  setSelectedUser({\r\n                    ...selectedUser,\r\n                    usrFirstname: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formLastname\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter last name\"\r\n                value={selectedUser.usrLastname}\r\n                onChange={(e) =>\r\n                  setSelectedUser({\r\n                    ...selectedUser,\r\n                    usrLastname: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter username\"\r\n                value={selectedUser.usrUsername}\r\n                onChange={(e) =>\r\n                  setSelectedUser({\r\n                    ...selectedUser,\r\n                    usrUsername: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSaveUser}>\r\n            {editMode ? \"Save Changes\" : \"Create User\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","import React from 'react';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport ListUsers from '../../components/ListUsers';\r\n\r\nconst ListUserPage = () => {\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\r\n      <Header />\r\n      <div style={{ flex: '1' }}>\r\n        <ListUsers />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListUserPage;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport PrivateRoute from './route/PrivateRoute';\r\nimport LandingPage from './pages/LandingPage';\r\nimport ErrorPage from './pages/ErrorPage';\r\nimport LoginPage from './pages/auth/LoginPage';\r\nimport ListUserPage from './pages/users/ListUserPage';\r\n// import HomePage from './pages/HomePage';\r\n// import ViewUserPage from './pages/ViewUserPage';\r\n// import ViewAlbumPage from './pages/ViewAlbumPage';\r\n// import ViewPhotoPage from './pages/ViewPhotoPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/\" component={LandingPage} exact />\r\n          <Route path=\"/login\" component={LoginPage} />\r\n          <PrivateRoute path=\"/users\" component={ListUserPage} />\r\n          {/* <PrivateRoute path=\"/home\" component={HomePage} />\r\n          <PrivateRoute path=\"/user/:userId\" component={ViewUserPage} />\r\n          <PrivateRoute path=\"/album/:albumId\" component={ViewAlbumPage} />\r\n          <PrivateRoute path=\"/photos/:photoId\" component={ViewPhotoPage} /> */}\r\n          <Route component={ErrorPage} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { createUser, editUser, getAllUsers } from \"../actions/allUsersActions\";\r\n\r\n\r\nconst allUsers = createSlice({\r\n  name: 'users',\r\n  initialState: {\r\n    users: [],\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAllUsers.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(getAllUsers.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.users = action.payload;\r\n      })\r\n      .addCase(getAllUsers.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(createUser.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(createUser.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.newUser = action.payload; // Save the new user data\r\n        state.users.push(action.payload); // Optionally add new user to the list\r\n      })\r\n      .addCase(createUser.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(editUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n    })\r\n    .addCase(editUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const updatedUser = action.payload;\r\n        state.users = state.users.map(user =>\r\n            user.usrId === updatedUser.usrId ? updatedUser : user\r\n        );\r\n    })\r\n    .addCase(editUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n    });\r\n  }\r\n});\r\n\r\nexport default allUsers.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { login, logout } from '../actions/authActions'; // Adjust the path if necessary\r\n\r\nconst initialState = {\r\n  user: {},       // To store the user data after login\r\n  token: null,    // To store the authentication token\r\n  loading: false, // To track the loading state\r\n  error: null,    // To store any error messages\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(login.pending, state => {\r\n        state.loading = true; // Set loading to true when login is in progress\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false; // Set loading to false when login succeeds\r\n        state.user = action.payload.payload; // Store the user data from the payload\r\n        state.token = action.payload.token; // Store the token\r\n        state.error = null; // Clear any previous errors\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false; // Set loading to false when login fails\r\n        state.user = {}; // Clear user data on failure\r\n        state.token = null; // Clear token on failure\r\n        state.error = action.payload || action.error.message; // Store the error message\r\n      })\r\n      .addCase(logout.pending, state => {\r\n        state.loading = true; // Set loading to true when logout is in progress\r\n      })\r\n      .addCase(logout.fulfilled, (state, action) => {\r\n        state.loading = false; // Set loading to false when logout succeeds\r\n        state.user = {}; // Clear user data on logout\r\n        state.error = null; // Clear any previous errors\r\n      })\r\n      .addCase(logout.rejected, (state, action) => {\r\n        state.loading = false; // Set loading to false when logout fails\r\n        state.error = action.payload || action.error.message; // Store the error message\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport allUsersReducer from './slices/allUsersSlices';\r\nimport authReducer from './slices/authSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n       allUsers: allUsersReducer,\r\n    },\r\n});\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport store from \"./redux/store\"\r\nimport { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\n// Initialize the Redux state with the stored user information\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}